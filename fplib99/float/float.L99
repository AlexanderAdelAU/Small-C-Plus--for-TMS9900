                        ;* * *  Small-C/Plus Version 1.06a for the TMS 9900 - Cameron * * *
                        ;       Cain, Van Zandt, Hendrix, Yorston, Cameron
                        ;          Original Z80  Version 21st April 1990       
                        ;
  0000                  R0	EQU 0
  0001                  R1	EQU 1
  0002                  R2	EQU 2
  0003                  R3	EQU 3
  0004                  R4	EQU 4
  0008                  R8	EQU 8
  0009                  SL	EQU 9
  000A                  SP	EQU 10
  000D                  WP	EQU 13
  000B                  R11	EQU 11
                        	DXOP CALL,6
                        	DXOP RET,7
                        	DXOP PUSH,8
                        	DXOP POP,9
                        	DXOP WHEX,10
                        	DXOP WRITE,12    ;WRITE CHAR IN MSB 
                        	DXOP DEBUG,15    ;TRACE THE PRECEDING INSTRUCTION, PC,ST and REGISTERS 
                        
                        ;-------- START MODULE -----------
  0000                  	NAM float\float
  0000   1000           	NOP; Required to terminate link chain with non zero for global variables
                        ;#include "float/float.h"
                        ;/*
                        ; * Floating Point declarations to ensure the Small C compiler generates the correct
                        ; * handling for the return variables
                        ; *
                        ; */
                        ;extern double floor();
                        ;extern double float();
                        ;extern int ifix();
                        ;extern double sin();
                        ;extern double cos();
                        ;extern double tan();
                        ;extern double pow();
                        ;extern double fabs();
                        ;extern double log();
                        ;extern double log10();
                        ;extern double exp();
                        ;extern double fmod();
                        ;extern double sqrt();
                        ;extern double atan();
                        ;extern double _ccfloor();
                        ;extern double _ccfloat();
                        ;extern double _ccpow();
                        ;extern double _ccsin();
                        ;extern double _cctan();
                        ;extern double _ccatan();
                        ;extern double _cccos();
                        ;extern double _ccifix();
                        ;extern double _ccfabs();
                        ;extern double _cclog();
                        ;extern double _ccexp();
                        ;extern double _ccsqrt();
                        ;extern double _ccmod();
                        ;extern double _cclog10();
                        ;/*
                        ; *	These are the Floating Point prototype functions declarations that call the
                        ; *	floating point libary entry points.
                        ; */
                        ;double floor (x)
  0002                  	EVEN
                        floor:
                        ;double x;
                        ;{
                        ;modstk(newsp,save)
                        ;	return _ccfloor(x);
                        ;modstk(newsp,save)
                        ;getloc(sym, off)
  0002   0204 0002      	LI  R4,2
  0006   A10A           	A  SP,R4
                        ;indirect float
                        ;fpcall()
  0008   2DA0 0000      	CALL @_fload##
                        ;fpush()
                        ;fpcall()
  000C   2DA0 0000      	CALL @_fpush##
                        ;zcall()
  0010   2DA0 0000      	CALL @_ccfloor
                        ;modstk(newsp,save)
  0014   022A 0006      	AI SP,6
                        ;modstk(newsp,save)
  0018   2DC0           	RET
                        ;}
                        ;double float (x)
  001A                  	EVEN
                        float:
                        ;int x;
                        ;{
                        ;	return _ccfloat(x);
                        ;modstk(newsp,save)
                        ;getloc(sym, off)
  001A   0204 0002      	LI  R4,2
  001E   A10A           	A  SP,R4
                        ;indirect ccgint
  0020   C114           	MOV *R4,R4
                        ;zpush()
  0022   064A           	DECT SP
  0024   C684           	MOV R4,*SP
                        ;zcall()
  0026   2DA0 0000      	CALL @_ccfloat
                        ;modstk(newsp,save)
  002A   05CA           	INCT SP
                        ;modstk(newsp,save)
  002C   2DC0           	RET
                        ;}
                        ;int ifix (x)
  002E                  	EVEN
                        ifix:
                        ;double x;
                        ;{
                        ;	return _ccifix(x);
                        ;modstk(newsp,save)
                        ;getloc(sym, off)
  002E   0204 0002      	LI  R4,2
  0032   A10A           	A  SP,R4
                        ;indirect float
                        ;fpcall()
  0034   2DA0 000A      	CALL @_fload##
                        ;fpush()
                        ;fpcall()
  0038   2DA0 000E      	CALL @_fpush##
                        ;zcall()
  003C   2DA0 0000      	CALL @_ccifix
                        ;modstk(newsp,save)
  0040   022A 0006      	AI SP,6
  0044   06A0 0000      	BL @_ifix##
                        ;modstk(newsp,save)
  0048   2DC0           	RET
                        ;}
                        ;double sin(x)
  004A                  	EVEN
                        sin:
                        ;double x;
                        ;{
                        ;	return _ccsin(x);
                        ;modstk(newsp,save)
                        ;getloc(sym, off)
  004A   0204 0002      	LI  R4,2
  004E   A10A           	A  SP,R4
                        ;indirect float
                        ;fpcall()
  0050   2DA0 0036      	CALL @_fload##
                        ;fpush()
                        ;fpcall()
  0054   2DA0 003A      	CALL @_fpush##
                        ;zcall()
  0058   2DA0 0000      	CALL @_ccsin
                        ;modstk(newsp,save)
  005C   022A 0006      	AI SP,6
                        ;modstk(newsp,save)
  0060   2DC0           	RET
                        ;}
                        ;double cos(x)
  0062                  	EVEN
                        cos:
                        ;double x;
                        ;{
                        ;	return _cccos(x);
                        ;modstk(newsp,save)
                        ;getloc(sym, off)
  0062   0204 0002      	LI  R4,2
  0066   A10A           	A  SP,R4
                        ;indirect float
                        ;fpcall()
  0068   2DA0 0052      	CALL @_fload##
                        ;fpush()
                        ;fpcall()
  006C   2DA0 0056      	CALL @_fpush##
                        ;zcall()
  0070   2DA0 0000      	CALL @_cccos
                        ;modstk(newsp,save)
  0074   022A 0006      	AI SP,6
                        ;modstk(newsp,save)
  0078   2DC0           	RET
                        ;}
                        ;double tan(x)
  007A                  	EVEN
                        tan:
                        ;double x;
                        ;{
                        ;	return _cctan(x);
                        ;modstk(newsp,save)
                        ;getloc(sym, off)
  007A   0204 0002      	LI  R4,2
  007E   A10A           	A  SP,R4
                        ;indirect float
                        ;fpcall()
  0080   2DA0 006A      	CALL @_fload##
                        ;fpush()
                        ;fpcall()
  0084   2DA0 006E      	CALL @_fpush##
                        ;zcall()
  0088   2DA0 0000      	CALL @_cctan
                        ;modstk(newsp,save)
  008C   022A 0006      	AI SP,6
                        ;modstk(newsp,save)
  0090   2DC0           	RET
                        ;}
                        ;double atan(x)
  0092                  	EVEN
                        atan:
                        ;double x;
                        ;{
                        ;	return _ccatan(x);
                        ;modstk(newsp,save)
                        ;getloc(sym, off)
  0092   0204 0002      	LI  R4,2
  0096   A10A           	A  SP,R4
                        ;indirect float
                        ;fpcall()
  0098   2DA0 0082      	CALL @_fload##
                        ;fpush()
                        ;fpcall()
  009C   2DA0 0086      	CALL @_fpush##
                        ;zcall()
  00A0   2DA0 0000      	CALL @_ccatan
                        ;modstk(newsp,save)
  00A4   022A 0006      	AI SP,6
                        ;modstk(newsp,save)
  00A8   2DC0           	RET
                        ;}
                        ;double fabs(x)
  00AA                  	EVEN
                        fabs:
                        ;double x;
                        ;{
                        ;	return _ccfabs(x);
                        ;modstk(newsp,save)
                        ;getloc(sym, off)
  00AA   0204 0002      	LI  R4,2
  00AE   A10A           	A  SP,R4
                        ;indirect float
                        ;fpcall()
  00B0   2DA0 009A      	CALL @_fload##
                        ;fpush()
                        ;fpcall()
  00B4   2DA0 009E      	CALL @_fpush##
                        ;zcall()
  00B8   2DA0 0000      	CALL @_ccfabs
                        ;modstk(newsp,save)
  00BC   022A 0006      	AI SP,6
                        ;modstk(newsp,save)
  00C0   2DC0           	RET
                        ;}
                        ;double log(x)
  00C2                  	EVEN
                        log:
                        ;double x;
                        ;{
                        ;	return _cclog(x);
                        ;modstk(newsp,save)
                        ;getloc(sym, off)
  00C2   0204 0002      	LI  R4,2
  00C6   A10A           	A  SP,R4
                        ;indirect float
                        ;fpcall()
  00C8   2DA0 00B2      	CALL @_fload##
                        ;fpush()
                        ;fpcall()
  00CC   2DA0 00B6      	CALL @_fpush##
                        ;zcall()
  00D0   2DA0 0000      	CALL @_cclog
                        ;modstk(newsp,save)
  00D4   022A 0006      	AI SP,6
                        ;modstk(newsp,save)
  00D8   2DC0           	RET
                        ;}
                        ;double log10(x)
  00DA                  	EVEN
                        log10:
                        ;double x;
                        ;{
                        ;	return _cclog10(x);
                        ;modstk(newsp,save)
                        ;getloc(sym, off)
  00DA   0204 0002      	LI  R4,2
  00DE   A10A           	A  SP,R4
                        ;indirect float
                        ;fpcall()
  00E0   2DA0 00CA      	CALL @_fload##
                        ;fpush()
                        ;fpcall()
  00E4   2DA0 00CE      	CALL @_fpush##
                        ;zcall()
  00E8   2DA0 0000      	CALL @_cclog10
                        ;modstk(newsp,save)
  00EC   022A 0006      	AI SP,6
                        ;modstk(newsp,save)
  00F0   2DC0           	RET
                        ;}
                        ;double exp(x)
  00F2                  	EVEN
                        exp:
                        ;double x;
                        ;{
                        ;	return _ccexp(x);
                        ;modstk(newsp,save)
                        ;getloc(sym, off)
  00F2   0204 0002      	LI  R4,2
  00F6   A10A           	A  SP,R4
                        ;indirect float
                        ;fpcall()
  00F8   2DA0 00E2      	CALL @_fload##
                        ;fpush()
                        ;fpcall()
  00FC   2DA0 00E6      	CALL @_fpush##
                        ;zcall()
  0100   2DA0 0000      	CALL @_ccexp
                        ;modstk(newsp,save)
  0104   022A 0006      	AI SP,6
                        ;modstk(newsp,save)
  0108   2DC0           	RET
                        ;}
                        ;double sqrt(x)
  010A                  	EVEN
                        sqrt:
                        ;double x;
                        ;{
                        ;	return _ccsqrt(x);
                        ;modstk(newsp,save)
                        ;getloc(sym, off)
  010A   0204 0002      	LI  R4,2
  010E   A10A           	A  SP,R4
                        ;indirect float
                        ;fpcall()
  0110   2DA0 00FA      	CALL @_fload##
                        ;fpush()
                        ;fpcall()
  0114   2DA0 00FE      	CALL @_fpush##
                        ;zcall()
  0118   2DA0 0000      	CALL @_ccsqrt
                        ;modstk(newsp,save)
  011C   022A 0006      	AI SP,6
                        ;modstk(newsp,save)
  0120   2DC0           	RET
                        ;}
                        ;double pow(x,y)
  0122                  	EVEN
                        pow:
                        ;double x;double y;
                        ;{
                        ;	return _ccpow(x,y);
                        ;modstk(newsp,save)
                        ;getloc(sym, off)
  0122   0204 0008      	LI  R4,8
  0126   A10A           	A  SP,R4
                        ;indirect float
                        ;fpcall()
  0128   2DA0 0112      	CALL @_fload##
                        ;fpush()
                        ;fpcall()
  012C   2DA0 0116      	CALL @_fpush##
                        ;getloc(sym, off)
  0130   0204 0008      	LI  R4,8
  0134   A10A           	A  SP,R4
                        ;indirect float
                        ;fpcall()
  0136   2DA0 012A      	CALL @_fload##
                        ;fpush()
                        ;fpcall()
  013A   2DA0 012E      	CALL @_fpush##
                        ;zcall()
  013E   2DA0 0000      	CALL @_ccpow
                        ;modstk(newsp,save)
  0142   022A 000C      	AI SP,12
                        ;modstk(newsp,save)
  0146   2DC0           	RET
                        ;}
                        ;double fmod(x,y)
  0148                  	EVEN
                        fmod:
                        ;double x;double y;
                        ;{
                        ;	return _ccmod(x,y);
                        ;modstk(newsp,save)
                        ;getloc(sym, off)
  0148   0204 0008      	LI  R4,8
  014C   A10A           	A  SP,R4
                        ;indirect float
                        ;fpcall()
  014E   2DA0 0138      	CALL @_fload##
                        ;fpush()
                        ;fpcall()
  0152   2DA0 013C      	CALL @_fpush##
                        ;getloc(sym, off)
  0156   0204 0008      	LI  R4,8
  015A   A10A           	A  SP,R4
                        ;indirect float
                        ;fpcall()
  015C   2DA0 0150      	CALL @_fload##
                        ;fpush()
                        ;fpcall()
  0160   2DA0 0154      	CALL @_fpush##
                        ;zcall()
  0164   2DA0 0000      	CALL @_ccmod
                        ;modstk(newsp,save)
  0168   022A 000C      	AI SP,12
                        ;modstk(newsp,save)
  016C   2DC0           	RET
                        ;}
                        	EXT _cccos
                        	ENT atan
                        	EXT _ccexp
                        	EXT _cclog
                        	EXT _ccmod
                        	ENT fmod
                        	EXT _cctan
                        	ENT ifix
                        	EXT _ccsin
                        	EXT _ccfabs
                        	EXT _ccpow
                        	EXT _ccatan
                        	ENT log10
                        	EXT _ccifix
                        	ENT float
                        	ENT sqrt
                        	ENT floor
                        	ENT cos
                        	ENT exp
                        	ENT log
                        	ENT tan
                        	EXT _ccsqrt
                        	EXT _cclog10
                        	ENT sin
                        	ENT pow
                        	EXT _ccfloat
                        	EXT _ccfloor
                        	ENT fabs
  016E                  	EVEN
  016E                  	END

No error(s).
_fload    015E*   R11       000B    _ifix     0046*   sqrt      010A'
_ccfloat  0028*   WHEX      2E80'   WP        000D    log10     00DA'
SL        0009    sin       004A'   WRITE     2F00'   _cctan    008A*
CALL      2D80'   fabs      00AA'   _ccmod    0166*   _ccexp    0102*
_cccos    0072*   R0        0000    _ccfabs   00BA*   R2        0002 
ifix      002E'   R1        0001    _ccsin    005A*   R3        0003 
_cclog10  00EA*   R4        0004    tan       007A'   R8        0008 
_ccifix   003E*   DEBUG     2FC0'   RET       2DC0'   _ccfloor  0012*
_cclog    00D2*   atan      0092'   POP       2E40'   float     001A'
_fpush    0162*   floor     0002'   _ccatan   00A2*   exp       00F2'
cos       0062'   fmod      0148'   SP        000A    _ccpow    0140*
_ccsqrt   011A*   float\fl  0000'   log       00C2'   PUSH      2E00'
pow       0122'
