;* * *  Small-C/Plus  Version 1.01 for TMS99105A  * * *
;       Cain, Van Zandt, Hendrix, Yorston and Cameron
;       25th February 1988 - 22 May, 2015;
;
R0	EQU 0
R1	EQU 1
R2	EQU 2
R3	EQU 3
R4	EQU 4
R8	EQU 8
SL	EQU 9
SP	EQU 10
WP	EQU 13
R11	EQU 11
	DXOP CALL,6
	DXOP RET,7
	DXOP PUSH,8
	DXOP POP,9
	DXOP WHEX,10
	DXOP WRITE,12    ;WRITE CHAR IN MSB 

;-------- START MODULE -----------
	NAM strlib\strcpy
;/*
; *	STRING FUNCTIONS FOR SMALL C
; * 	BASED ON CORRESPONDING UNIX FUNCTIONS
; */
;#include <stdio.h>
;/*
;** STDIO.H -- Standard Small-C Definitions
;**
;** Copyright 1984  L. E. Payne and J. E. Hendrix
;*/
;#define stdin    0
;#define stdout   1
;#define stderr   2
;#define ERR   (-2)
;#define EOF   (-1)
;#define YES      1
;#define NO       0
;#define NULL     0
;#define CR      0x0D /* '\r' */
;#define LF      0x0A /* '\n' */
;#define BELL     7
;#define SPACE  ' '
;#define NEWLINE LF      /*23*/ /*45*/
;#define FILE char
;//#include <string.h>
;strcpy( to, from )
	EVEN
strcpy:
;char *to, *from ;
;{
;modstk(newsp,save)
;	char *temp ;
;	temp = to ;
;modstk(newsp,save)
	DECT SP
;getloc(sym, off)
	LI  R4,6
	A  SP,R4
;indirect ccgint
	MOV *R4,R4
;puttos()
	MOV R4,*SP
;	while( *to++ = *from++ ) ;
cc2:
;getloc(sym, off)
	LI  R4,6
	A  SP,R4
;zpush()
	DECT SP
	MOV R4,*SP
;indirect ccgint
	MOV *R4,R4
;inc()
	INC R4
;zpop()
	MOV *SP+,R3
;putstk - int
	MOV R4,*R3
;	dec()
	DEC R4
;zpush()
	DECT SP
	MOV R4,*SP
;getloc(sym, off)
	LI  R4,6
	A  SP,R4
;zpush()
	DECT SP
	MOV R4,*SP
;indirect ccgint
	MOV *R4,R4
;inc()
	INC R4
;zpop()
	MOV *SP+,R3
;putstk - int
	MOV R4,*R3
;	dec()
	DEC R4
;indirect ccgchar
	MOVB *R4,R4
	SRA	R4,8
;zpop()
	MOV *SP+,R3
;putstk - char
	MOVB @2*R4+1(WP),*R3
;testjump()
	MOV R4,R4
	JNE $+6
	B @cc3
;jump(label)
	B  @cc2
cc3:
;	return temp ;
;getloc(sym, off)
	MOV SP,R4
;indirect ccgint
	MOV *R4,R4
;modstk(newsp,save)
	INCT SP
	RET
;}
	EVEN
;/*
;#asm
;qstrcpy:
;	POP HL
;	POP DE		;DE is from
;	POP BC		;BC is to
;	PUSH BC
;	PUSH DE
;	PUSH HL
;	LD H,B		;return to
;	LD L,C
;ccstr2:
;	LD A,(DE)
;	LD (BC),A
;	INC DE
;	INC BC
;	OR A		;test char for zero
;	JP NZ,ccstr2
;	RET
;#endasm
;*/
	ENT strcpy
	EVEN
	END

; --- End of Compilation ---
