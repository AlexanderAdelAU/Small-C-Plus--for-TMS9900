                        ;* * *  Small-C/Plus  Version 1.01 for TMS99105A  * * *
                        ;       Cain, Van Zandt, Hendrix, Yorston and Cameron
                        ;       25th February 1988 - 22 May, 2015;
                        ;
  0000                  R0	EQU 0
  0001                  R1	EQU 1
  0002                  R2	EQU 2
  0003                  R3	EQU 3
  0004                  R4	EQU 4
  0008                  R8	EQU 8
  0009                  SL	EQU 9
  000A                  SP	EQU 10
  000D                  WP	EQU 13
  000B                  R11	EQU 11
                        	DXOP CALL,6
                        	DXOP RET,7
                        	DXOP PUSH,8
                        	DXOP POP,9
                        	DXOP WHEX,10
                        	DXOP WRITE,12    ;WRITE CHAR IN MSB 
                        
                        ;-------- START MODULE -----------
  0000                  	NAM strlib\strcpy
                        ;/*
                        ; *	STRING FUNCTIONS FOR SMALL C
                        ; * 	BASED ON CORRESPONDING UNIX FUNCTIONS
                        ; */
                        ;#include <stdio.h>
                        ;/*
                        ;** STDIO.H -- Standard Small-C Definitions
                        ;**
                        ;** Copyright 1984  L. E. Payne and J. E. Hendrix
                        ;*/
                        ;#define stdin    0
                        ;#define stdout   1
                        ;#define stderr   2
                        ;#define ERR   (-2)
                        ;#define EOF   (-1)
                        ;#define YES      1
                        ;#define NO       0
                        ;#define NULL     0
                        ;#define CR      0x0D /* '\r' */
                        ;#define LF      0x0A /* '\n' */
                        ;#define BELL     7
                        ;#define SPACE  ' '
                        ;#define NEWLINE LF      /*23*/ /*45*/
                        ;#define FILE char
                        ;//#include <string.h>
                        ;strcpy( to, from )
  0000                  	EVEN
                        strcpy:
                        ;char *to, *from ;
                        ;{
                        ;modstk(newsp,save)
                        ;	char *temp ;
                        ;	temp = to ;
                        ;modstk(newsp,save)
  0000   064A           	DECT SP
                        ;getloc(sym, off)
  0002   0204 0006      	LI  R4,6
  0006   A10A           	A  SP,R4
                        ;indirect ccgint
  0008   C114           	MOV *R4,R4
                        ;puttos()
  000A   C684           	MOV R4,*SP
                        ;	while( *to++ = *from++ ) ;
                        cc2:
                        ;getloc(sym, off)
  000C   0204 0006      	LI  R4,6
  0010   A10A           	A  SP,R4
                        ;zpush()
  0012   064A           	DECT SP
  0014   C684           	MOV R4,*SP
                        ;indirect ccgint
  0016   C114           	MOV *R4,R4
                        ;inc()
  0018   0584           	INC R4
                        ;zpop()
  001A   C0FA           	MOV *SP+,R3
                        ;putstk - int
  001C   C4C4           	MOV R4,*R3
                        ;	dec()
  001E   0604           	DEC R4
                        ;zpush()
  0020   064A           	DECT SP
  0022   C684           	MOV R4,*SP
                        ;getloc(sym, off)
  0024   0204 0006      	LI  R4,6
  0028   A10A           	A  SP,R4
                        ;zpush()
  002A   064A           	DECT SP
  002C   C684           	MOV R4,*SP
                        ;indirect ccgint
  002E   C114           	MOV *R4,R4
                        ;inc()
  0030   0584           	INC R4
                        ;zpop()
  0032   C0FA           	MOV *SP+,R3
                        ;putstk - int
  0034   C4C4           	MOV R4,*R3
                        ;	dec()
  0036   0604           	DEC R4
                        ;indirect ccgchar
  0038   D114           	MOVB *R4,R4
  003A   0884           	SRA	R4,8
                        ;zpop()
  003C   C0FA           	MOV *SP+,R3
                        ;putstk - char
  003E   D4ED 0009      	MOVB @2*R4+1(WP),*R3
                        ;testjump()
  0042   C104           	MOV R4,R4
  0044   1602           	JNE $+6
  0046   0460 004E      	B @cc3
                        ;jump(label)
  004A   0460 000C      	B  @cc2
                        cc3:
                        ;	return temp ;
                        ;getloc(sym, off)
  004E   C10A           	MOV SP,R4
                        ;indirect ccgint
  0050   C114           	MOV *R4,R4
                        ;modstk(newsp,save)
  0052   05CA           	INCT SP
  0054   2DC0           	RET
                        ;}
  0056                  	EVEN
                        ;/*
                        ;#asm
                        ;qstrcpy:
                        ;	POP HL
                        ;	POP DE		;DE is from
                        ;	POP BC		;BC is to
                        ;	PUSH BC
                        ;	PUSH DE
                        ;	PUSH HL
                        ;	LD H,B		;return to
                        ;	LD L,C
                        ;ccstr2:
                        ;	LD A,(DE)
                        ;	LD (BC),A
                        ;	INC DE
                        ;	INC BC
                        ;	OR A		;test char for zero
                        ;	JP NZ,ccstr2
                        ;	RET
                        ;#endasm
                        ;*/
                        	ENT strcpy
  0056                  	EVEN
  0056                  	END

No error(s).
SP        000A    WHEX      2E80'   strlib\s  0000'   R0        0000 
WRITE     2F00'   R1        0001    strcpy    0000'   R2        0002 
R11       000B    R3        0003    WP        000D    R4        0004 
cc2       000C'   CALL      2D80'   cc3       004E'   POP       2E40'
R8        0008    PUSH      2E00'   SL        0009    RET       2DC0'
